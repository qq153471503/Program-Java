<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Move element &apos;Tool.java&apos; to &apos;ContainerDemo/src/(default package)&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Destination element: &apos;ContainerDemo/src/(default package)&apos;&#x0D;&#x0A;- Original element: &apos;tool.Tool.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;" element1="/src&lt;tool{Tool.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1501411444918" units="1" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original element: &apos;ContainerDemo/src/tool&apos;" description="Delete element" element1="/src&lt;tool" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1501411453024" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;public static void show()&apos; from &apos;GenericesDemo3.main()&apos; to &apos;GenericesDemo3&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Method name: &apos;show&apos;&#x0D;&#x0A;- Destination type: &apos;GenericesDemo3&apos;&#x0D;&#x0A;- Declared visibility: &apos;public&apos;" comments="false" description="Extract method &apos;show&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenericesDemo3.java" name="show" replace="false" selection="321 382" stamp="1501418529439" version="1.0" visibility="1"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     GenericesDemo3.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{GenericesDemo3.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1501422893197" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void function(char[] str_arr, TreeMap&lt;Character,Integer&gt; tm)&apos; from &apos;zMapPriactice1.main()&apos; to &apos;zMapPriactice1&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Method name: &apos;function&apos;&#x0D;&#x0A;- Destination type: &apos;zMapPriactice1&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;function&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{zMapPriactice1.java" name="function" replace="false" selection="653 369" stamp="1501492611601" version="1.0" visibility="2"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     ToolClass.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{ToolClass.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1501507656477" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     ToolClass.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{ToolClass.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1501508030487" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;MyListSynOuter.MyListInner.list&apos; in &apos;MyListSynOuter.MyListInner&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Original element: &apos;MyListSynOuter.MyListInner.list&apos;&#x0D;&#x0A;- Getter method name: &apos;getList&apos;&#x0D;&#x0A;- Setter method name: &apos;setList&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;list&apos;" flags="589830" getter="getList" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;{ToolClass.java[MyListSynOuter[MyListInner^list" insertion="0" setter="setList" stamp="1501508482157" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Extract method &apos;private static void show()&apos; from &apos;ForeachDemo.main()&apos; to &apos;ForeachDemo&apos;&#x0D;&#x0A;- Original project: &apos;ContainerDemo&apos;&#x0D;&#x0A;- Method name: &apos;show&apos;&#x0D;&#x0A;- Destination type: &apos;ForeachDemo&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;show&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{ForeachDemo.java" name="show" replace="false" selection="295 747" stamp="1501512684042" version="1.0" visibility="2"/>
</session>