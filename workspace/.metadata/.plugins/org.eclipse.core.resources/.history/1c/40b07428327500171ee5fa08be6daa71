

数据需要唯一吗？


需要：Set
	需要制定顺序：TreeList
	不需要：		HashList
	但是想要一个和存储一致的顺序（有序）：LinkedList

不需要：List
	频繁删减？
	是:  LinkedList
	否：ArrayList
	
	
	
看到Array ：想到数组 有角标  就想到查询快

看到Link： 就想到链表  就想到增删改快， 就想到add removeFirst last等方法


看到hash：就想到哈希表，就想到要唯一性，存储进该容器的对象就要覆盖hashcode 和 equals 方法

看到tree：就想到二叉树 就想到排序    就想到Comparable 和 Comparator ，
		就想到，要么在存储进该容器的类上实现Comparator接口，覆盖compare方法
		
Comparable & Comparator 都是用来实现集合中元素的比较、排序的，
只是 Comparable 是在集合内部定义的方法实现的排序，Comparator 是在集合外部实现的排序
说白了就是：
			Comparable要在被存储的类上实现
			Comparator：被存储的类的实例，无法或不能修改实现自Comparable接口中compareTo方法，
						可以新建一个实现自Comparator接口的类，并覆盖compare方法，向下面这样传递给容器
						TreeSet<Student> ts = new TreeSet<Student>(new CompareByName2());
						其中CompareByName2就是自行创建的比较器类