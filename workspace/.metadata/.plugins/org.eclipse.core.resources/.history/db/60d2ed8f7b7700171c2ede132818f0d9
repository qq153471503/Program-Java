package FileObject;

import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;


/**
 * 【File类】：使用演示Demo
 * @author KunGe
 *
 */
public class FileDemo1 {

	private static final String DIR = "G:\\123";

	/**
	 * @param args
	 * @throws Exception 
	 */
	public static void main(String[] args) throws Exception {

//		demo_1();
//		
//		//创建
//		demo_2();
//		
		//判断
//		demo_3();
		
		//获取容量
//		demo_4();
		
		/**
		 * 【练习】：获取最大自由使用空间的盘符
		 */
		priactice();
	}

	private static void priactice() {
		HashMap<String, Long> hm = new HashMap<>();
//		hm.put(key, value)
		StringBuffer sb = null;
		
		File[] fi = File.listRoots();
		for(File file : fi){
			System.out.println(file.toString());
			hm.put(file.toString(), file.getUsableSpace());
		}
		
		Set<Map.Entry<String, Long>> setIt = hm.entrySet();
		Iterator<Entry<String, Long>> it = setIt.iterator();
		
		while(it.hasNext()){
			System.out.println(it.next());
			Map.Entry<String, Long> map = it.next();
			long val = map.getValue();
			String key = map.getKey();
			System.out.println(key+"..."+val);
		}
		
	}

	private static void demo_4() {
		
		File[] files = File.listRoots();
		
		for(File file : files){
			System.out.println(file);
		}
		
		File f2 = new File("C:\\");
		System.out.println(f2.getFreeSpace());	//自由空间
		System.out.println(f2.getTotalSpace());	//容量
		System.out.println(f2.getUsableSpace());//可用空间
		
	}

	private static void demo_3() {

		File file = new File("123.txt");
		System.out.println(file.exists());	//文件是否存在
		
		File file2 = new File("G:\\465.TXT");
		
		System.out.println(file.renameTo(file2));

	}

	private static void demo_2() throws Exception {
		File file = new File("test.txt");
		System.out.println(file.createNewFile());
		
		System.out.println(file.delete());
		
		File fi = new File("123test");
		System.out.println(fi.mkdir());
		System.out.println(fi.delete());
	}

	private static void demo_1() throws IOException {
		File fi = new File("123.txt");

		System.out.println("path			:"+fi.getAbsolutePath());
		System.out.println("FreeSpace		:"+fi.getFreeSpace());
		
		long lastTime = fi.lastModified();
		Date d = new Date(lastTime);
		DateFormat df = DateFormat.getDateTimeInstance();
		String time = df.format(d);
		System.out.println("lastModified		:"+time);
		
		System.out.println(fi.getParentFile());
	}

}


